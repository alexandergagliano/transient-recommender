---
# Classifier Configuration for Transient Recommender
# This file defines which automated classifiers to run for each science case

classifiers:
  anomalous:
    - name: "reLAISS"
      description: "Anomaly detection using light curve morphology"
      url: "https://github.com/evan-reynolds/re-laiss"
      enabled: true
      confidence_threshold: 60.0
      module: "app.anomaly_service"
      function: "process_new_objects_for_anomalies"
      
  snia-like:
    - name: "SUPERPHOT+"
      description: "SN Ia classification using photometric features"
      url: "https://github.com/LSSTDESC/superphot-plus"  # Placeholder URL
      enabled: false  # TODO: Implement SUPERPHOT+ integration
      confidence_threshold: 70.0
      module: "app.snia_classifier"  # TODO: Create this module
      function: "classify_snia_candidates"
      
    - name: "SCONE"
      description: "Supernova Classification using ONly tEmporal information"
      url: "https://github.com/HeloiseS/SCONE"  # Placeholder URL
      enabled: false  # TODO: Implement SCONE integration
      confidence_threshold: 75.0
      module: "app.snia_classifier"  # TODO: Create this module
      function: "scone_classify"
      
  ccsn-like:
    - name: "RAPID"
      description: "Real-time Automated Photometric IDentification"
      url: "https://github.com/daniel-muthukrishna/RAPID"  # Placeholder URL
      enabled: false  # TODO: Implement RAPID integration
      confidence_threshold: 65.0
      module: "app.ccsn_classifier"  # TODO: Create this module
      function: "classify_ccsn_candidates"
      
  long-lived:
    - name: "Custom Long-lived Classifier"
      description: "Classifier for long-lived transients"
      url: "#"  # TODO: Add appropriate URL
      enabled: false  # TODO: Implement classifier
      confidence_threshold: 60.0
      module: "app.longlived_classifier"  # TODO: Create this module
      function: "classify_longlived_candidates"
      
  precursor:
    - name: "Precursor Detection"
      description: "Pre-explosion activity detection"
      url: "#"  # TODO: Add appropriate URL
      enabled: false  # TODO: Implement classifier
      confidence_threshold: 70.0
      module: "app.precursor_classifier"  # TODO: Create this module
      function: "classify_precursor_candidates"

# Global settings
settings:
  run_after_feature_extraction: true
  max_concurrent_classifiers: 3
  log_level: "INFO"
  cache_results: true
  cache_duration_hours: 24 